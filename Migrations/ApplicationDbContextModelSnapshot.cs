// <auto-generated />
using System;
using GestionStock.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GestionStock.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GestionStock.Models.Categorie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("GestionStock.Models.Entrepot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adresse")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("Capacite")
                        .HasColumnType("int");

                    b.Property<int>("CapaciteDisponible")
                        .HasColumnType("int");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("NombreRayons")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Entrepots");
                });

            modelBuilder.Entity("GestionStock.Models.MouvementStock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("EntrepotId")
                        .HasColumnType("int");

                    b.Property<int>("ProduitId")
                        .HasColumnType("int");

                    b.Property<int>("Quantite")
                        .HasColumnType("int");

                    b.Property<int>("TypeMouvement")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EntrepotId");

                    b.HasIndex("ProduitId");

                    b.ToTable("MouvementsStock");
                });

            modelBuilder.Entity("GestionStock.Models.Produit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Fournisseur")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("Prix")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SeuilMin")
                        .HasColumnType("int");

                    b.Property<int>("SousCategorieId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SousCategorieId");

                    b.ToTable("Produits");
                });

            modelBuilder.Entity("GestionStock.Models.SousCategorie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategorieId")
                        .HasColumnType("int");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CategorieId");

                    b.ToTable("SousCategories");
                });

            modelBuilder.Entity("GestionStock.Models.Stock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EntrepotId")
                        .HasColumnType("int");

                    b.Property<int>("ProduitId")
                        .HasColumnType("int");

                    b.Property<int>("Quantite")
                        .HasColumnType("int");

                    b.Property<int>("Rayon")
                        .HasColumnType("int");

                    b.Property<int>("SeuilAlerte")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EntrepotId");

                    b.HasIndex("ProduitId");

                    b.ToTable("Stocks");
                });

            modelBuilder.Entity("GestionStock.Models.Utilisateur", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MotDePasse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Utilisateurs");
                });

            modelBuilder.Entity("GestionStock.Models.MouvementStock", b =>
                {
                    b.HasOne("GestionStock.Models.Entrepot", "Entrepot")
                        .WithMany("MouvementsStock")
                        .HasForeignKey("EntrepotId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GestionStock.Models.Produit", "Produit")
                        .WithMany("MouvementsStock")
                        .HasForeignKey("ProduitId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Entrepot");

                    b.Navigation("Produit");
                });

            modelBuilder.Entity("GestionStock.Models.Produit", b =>
                {
                    b.HasOne("GestionStock.Models.SousCategorie", "SousCategorie")
                        .WithMany("Produits")
                        .HasForeignKey("SousCategorieId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("SousCategorie");
                });

            modelBuilder.Entity("GestionStock.Models.SousCategorie", b =>
                {
                    b.HasOne("GestionStock.Models.Categorie", "Categorie")
                        .WithMany("SousCategories")
                        .HasForeignKey("CategorieId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Categorie");
                });

            modelBuilder.Entity("GestionStock.Models.Stock", b =>
                {
                    b.HasOne("GestionStock.Models.Entrepot", "Entrepot")
                        .WithMany("Stocks")
                        .HasForeignKey("EntrepotId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestionStock.Models.Produit", "Produit")
                        .WithMany("Stocks")
                        .HasForeignKey("ProduitId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Entrepot");

                    b.Navigation("Produit");
                });

            modelBuilder.Entity("GestionStock.Models.Categorie", b =>
                {
                    b.Navigation("SousCategories");
                });

            modelBuilder.Entity("GestionStock.Models.Entrepot", b =>
                {
                    b.Navigation("MouvementsStock");

                    b.Navigation("Stocks");
                });

            modelBuilder.Entity("GestionStock.Models.Produit", b =>
                {
                    b.Navigation("MouvementsStock");

                    b.Navigation("Stocks");
                });

            modelBuilder.Entity("GestionStock.Models.SousCategorie", b =>
                {
                    b.Navigation("Produits");
                });
#pragma warning restore 612, 618
        }
    }
}
